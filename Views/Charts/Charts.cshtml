@using Microsoft.AspNetCore.Hosting
@using System.IO
@inject IWebHostEnvironment HostingEnvironment

@{
    var user = Context.User;
    var isAdmin = user.IsInRole("Admin");
    string jsonFolderPath = HostingEnvironment.ContentRootPath + "/wwwroot/json";
    var jsonFiles = Directory.GetFiles(jsonFolderPath, "*.json");
}

<!DOCTYPE html>
<html>
<head>
    <title>Charts for Air, Water and Forest Quality in Tanger</title>
    <link rel="stylesheet" type="text/css" href="~/css/chart-style.css">
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
</head>

<body>

    <h2>Air and Water, Forest Quality in Tanger</h2>
    @if (isAdmin)
    {
        <input type="file" id="dataFile" accept=".json" class="green-button" />
    }

    <div class="dropdown">
        <button class="dropbtn" onclick="toggleDropdown()">
            Quarter
            <i class="fa fa-caret-down"></i>
        </button>
        <div id="myDropdown" class="dropdown-content">
            @foreach (var jsonFile in jsonFiles)
            {
                var fileName = System.IO.Path.GetFileName(jsonFile);
                <a href="/json/@fileName">@fileName</a>
            }
        </div>
    </div>

    <div id="airChartContainer" style="height: 300px; width: 100%;"></div>
    <div id="waterChartContainer" style="height: 300px; width: 100%;"></div>
    <div id="forestChartContainer" style="height: 300px; width: 100%;"></div>

    <script>
        document.getElementById('dataFile').addEventListener('change', function (e) {
            var file = e.target.files[0];
            var reader = new FileReader();

            reader.onload = function (e) {
                var jsonData = JSON.parse(e.target.result);

                // Extract the air pollution data
                const airData = jsonData.AirPollution.map(item => ({
                    label: item.pollutant,
                    y: item.pollutant_level === 'High' ? 3 :
                        item.pollutant_level === 'Medium' ? 2 : 1
                }));

                // Extract the water waste data
                var waterData = [];
                jsonData.WaterWaste.forEach(function (item) {
                    var dataPoint = {
                        x: new Date(item.timestamp),
                        y: parseInt(item.waste_volume)
                    };
                    waterData.push(dataPoint);
                });

                // Extract the forest pollution data
                const forestData = jsonData.ForestPollution.map(item => ({
                    label: item.pollutant,
                    y: item.severity === 'High' ? 3 :
                        item.severity === 'Medium' ? 2 : 1
                }));

                // Create the air quality chart
                const airChart = new CanvasJS.Chart("airChartContainer", {
                    title: { text: "Air Quality" },
                    axisY: { title: "Pollutant Level", interval: 1, maximum: 3 },
                    data: [{ type: "column", dataPoints: airData }]
                });
                airChart.render();

                // Create the water quality chart
                var waterChart = new CanvasJS.Chart("waterChartContainer", {
                    title: {
                        text: "Water Quality"
                    },
                    axisX: {
                        title: "Timestamp",
                        valueFormatString: "MMM DD, YYYY HH:mm"
                    },
                    axisY: {
                        title: "Waste Volume (liters)"
                    },
                    data: [{
                        type: "column",
                        dataPoints: waterData
                    }]
                });
                waterChart.render();

                // Create the forest quality chart
                const forestChart = new CanvasJS.Chart("forestChartContainer", {
                    title: { text: "Forest Quality" },
                    axisY: { title: "Severity Level", interval: 1, maximum: 3 },
                    data: [{ type: "column", dataPoints: forestData }]
                });
                forestChart.render();

                // Save the file to the server
                var formData = new FormData();
                formData.append('file', file);

                fetch('/Charts/Upload', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log('File saved successfully.');
                    })
                    .catch(error => console.error('Error:', error));

                // Load the charts based on the uploaded file
                loadChart(jsonData);
            };
            reader.readAsText(file);
        });
    </script>
    <script>
        function toggleDropdown() {
            document.getElementById("myDropdown").classList.toggle("show");
        }
    </script>
</body>
</html>
